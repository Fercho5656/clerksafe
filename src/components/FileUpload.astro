---

---

<form
  action="/api/files"
  method="POST"
  enctype="multipart/form-data"
  class="flex flex-col gap-4 max-w-md p-6 bg-white shadow-md rounded-lg"
  id="file-upload-form"
>
  <h2 class="text-xl font-semibold">Upload New File</h2>
  <div>
    <label for="file" class="block text-sm font-medium text-gray-700 mb-1">
      Select a file
    </label>
    <input
      type="file"
      id="input-files"
      name="input-files"
      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
      multiple
      required
    />
  </div>
  <button
    type="submit"
    class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
  >
    Upload
  </button>
</form>

<script>
  const fileUploadForm = document.querySelector(
    '#file-upload-form'
  ) as HTMLFormElement
  const inputFiles = document.querySelector('#input-files') as HTMLInputElement

  fileUploadForm.addEventListener('submit', async (event) => {
    event.preventDefault()

    const files = Array.from(inputFiles.files || [])
    const formData = new FormData()

    for (const file of files) {
      formData.append('input-files', file)
    }

    try {
      const response = await fetch(fileUploadForm.action, {
        method: fileUploadForm.method,
        body: formData,
      })

      if (!response.ok) {
        throw new Error('Network response was not ok')
      }
      const result = await response.json()
      return result
    } catch (e) {
      console.error('Error uploading files:', e)
    }
  })
</script>
